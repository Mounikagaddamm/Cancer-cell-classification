# -*- coding: utf-8 -*-
"""Cancer cell classification using Scikit-learn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FfTJXMhB_IF3QE9MmLrKeQebUd60AQQS

# Cancer cell classification using Scikit-learn

# Importing Necessary Modules and Dataset
"""

from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score
import pandas as pd
import matplotlib.pyplot as plt

"""# Loading the Dataset into a Variable"""

data = load_breast_cancer()

"""# Exploring the Dataset"""

df=pd.DataFrame(data.data,columns=data.feature_names)
df.sample(5)

df.info()

df.describe()

df2=pd.DataFrame(data.target,columns=['target'])
df2.sample(5)

class_counts=df2["target"].value_counts()
plt.pie(class_counts, labels=class_counts.index, autopct='%1.2f%%', colors=['red', 'green'])

"""# Splitting the Data into Training and Testing Sets"""

X_train, X_test, y_train, y_test = train_test_split(data.data, data.target, test_size=0.33, random_state=42)

"""# Building and Training the Model"""

model = GaussianNB()
model.fit(X_train, y_train)

"""# Making Predictions"""

y_pred = model.predict(X_test)
print(y_pred[:10])

"""# Evaluating Model Accuracy"""

accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy * 100:.2f}%")

"""# This means our Naive Bayes classifier is 94.15% accurate in predicting whether a tumor is malignant or benign meaning our model is working fine and can be used for medical diagnostics."""